package fr.airpure.main.services;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import fr.airpure.main.autoGenerated.Feature;
import fr.airpure.main.autoGenerated.IndicateurPollutionAir;
import fr.airpure.main.entities.Polluant;
import fr.airpure.main.entities.Station;

@Service
public class ExtractPolluantService {
	public ExtractPolluantService() {
		// TODO Auto-generated constructor stub
	}
	
	
	public void extract(RestTemplate restTemplate) {
			IndicateurPollutionAir qualiteAirListe = restTemplate.getForObject("https://opendata.arcgis.com/datasets/4a648b54876f485e92f22e2ad5a5da32_0.geojson", IndicateurPollutionAir.class);
	
			String sql = "SELECT C2.id FROM commune as C2 \r\n"
					+ "INNER JOIN departement ON C2.departement_id = departement.id\r\n"
					+ "INNER JOIN region ON region.id = departement.region_id\r\n"
					+ "WHERE region.id = 5";
	
	
			List<Feature> maListe = qualiteAirListe.getFeatures();
			
			DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"); 
	
			for (Feature m : maListe) {
				// POUR CHAQUE LIGNE JE CREAIS UN POLLUANT ET UNE STATION
				//JE CONVERTIS LES PROPRIETEES STRING RECUPERER EN LOCALDATETIME
				LocalDateTime dateDebut = LocalDateTime.parse(m.getProperties().getDateDebut(), formatter);
				LocalDateTime dateFin = LocalDateTime.parse(m.getProperties().getDateFin(), formatter);		
				
				Polluant polluant = new Polluant(m.getProperties().getNomPoll(),  
												m.getProperties().getValeur(),
												m.getProperties().getMetrique(), 
												dateDebut, 
												dateFin);
				// persist en bdd
				Station station = new Station(m.getProperties().getNomStation(), 
											String.valueOf(m.getProperties().getyL93()), 
											String.valueOf(m.getProperties().getxL93()));
	//			System.out.println(m.getProperties().getxL93());
	//			System.out.println(m.getProperties().getyL93());
	//			System.out.println(m.getProperties().getInseeCom());
	//			System.out.println(m.getProperties().getNomCom());
					//insertion sql Latitude
	//			String sql2 = "UPDATE commune as C" + " SET C.latitude = '"+ m.getProperties().getxL93() + "' " + " WHERE C.id IN ( "+ sql + ");";
	//			//st.executeUpdate(sql2);
				//insertion sql Longitude
				//String sql3 = "UPDATE commune " + " SET longitude = '"+ m.getProperties().getyL93() + "' " + " WHERE code_insee='"+ m.getProperties().getInseeCom() + "';";
				//st.executeUpdate(sql3);	
				
				//String optiUpdate =  "UPDATE commune " + " SET latitude = '"+ m.getProperties().getxL93() + "' " + " WHERE commune.id IN' "+ sql; 
		}
	}
	
}
